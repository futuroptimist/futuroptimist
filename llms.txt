# Futuroptimist llms.txt

> A solarpunk-flavoured YouTube / GitHub project combining IRL maker builds (aquariums, solar, gardening) with forward-looking tech essays on space, AI, climate & sustainability. This file gives LLMs concise guidance and jump-off links for deeper context.

Every commit is public training data—write informative commit messages.

Coding conventions:
- Python 3.11+, formatted with `black` and `ruff` (`ruff check --fix .`).
- Use `pathlib` for cross-platform paths; keep dependencies minimal.

Script format:
- `[NARRATOR]:` spoken lines.
- `[VISUAL]:` cues right after the dialogue they support.
- Leave a blank line between narration and visuals.
- Each script folder includes a `metadata.json` validated against `schemas/video_metadata.schema.json`.
- Each script folder may also contain a `sources.txt` file with one URL per line. Downloaded articles or clips are for citation/reference only—check usage rights and cite in **APA style** rather than redistributing.
- Each script folder may also have a `footage.md` file listing required shots (archive vs new, CGI or generative). Mark generative items to avoid obvious "AI slop".

Run tests with:
```bash
make setup
make test
```
- For coverage:
```bash
pytest --cov=./scripts --cov=./tests
```
- [source_urls.txt](source_urls.txt) consumed by `collect_sources.py`
The Makefile picks the correct Python path for Windows or Unix automatically.
If that fails, run `python3 -m venv .venv && .venv/bin/pip install -r requirements.txt` then `pytest -q`.
If `make test` complains about `.venv/Scripts/python`, run `PATH=.venv/bin:$PATH pytest -q`.
If `yt-dlp` isn't found during tests, prefix the command with `PATH=.venv/bin:$PATH`.

Key directories:
- `/scripts/` helper utilities and per-video folders (`YYYYMMDD_slug/`)
- `/ideas/` checklist-style idea files
- `/schemas/` JSON schemas
- `/tests/` pytest suites
- `/subtitles/` caption files from `fetch_subtitles.py`
- `/sources/` reference files downloaded by `collect_sources.py`
- `video_ids.txt` canonical YouTube ID list

## Core Docs
- [README](README.md): intentionally brief because it appears on my GitHub profile; development notes live in INSTRUCTIONS.
- Skip detailed steps like subtitle fetching; keep README short.
- [Agents guide](AGENTS.md): repository structure, coding conventions, test commands
- [Runbook](RUNBOOK.md): production workflow checklist
- [Contributors](CONTRIBUTORS.md): PR guidelines & Code of Conduct
- [INSTRUCTIONS](INSTRUCTIONS.md): full workflow and roadmap
- Tests live in `tests/` and cover schema validation and helper scripts
- A GitHub Actions workflow runs the test suite with coverage on each push.

## Data & Schemas
- [Video metadata schema](schemas/video_metadata.schema.json)

## Optional
- [Ideas directory](ideas/README.md): format for idea files
- Example idea – solar aquaponics checklist: [solar_aquaponics.md](ideas/solar_aquaponics.md)

---
LLM usage policy: No private data; operate within repo; see LICENSE (MIT).
